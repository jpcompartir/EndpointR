% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/json_schema.R
\name{schema_object}
\alias{schema_object}
\title{Create JSON Schema object definitions}
\usage{
schema_object(..., required = NULL, additional_properties = FALSE)
}
\arguments{
\item{...}{Named arguments defining object properties (use other schema_* helpers)}

\item{required}{Character vector of required property names}

\item{additional_properties}{Whether to allow extra properties beyond those defined}
}
\description{
These helper functions simplify creating JSON Schema definitions for
structured outputs (e.g. OpenAI). They provide type-safe, validated schemas that ensure
consistent LLM responses matching your expected data structure.

JSON Schema constrains LLM outputs to specific formats, preventing parsing
errors and ensuring reliable data extraction from unstructured text.
Create object schema with nested properties

Defines a JSON object with typed properties. Use this for structured data
like user profiles, API responses, or any nested data structure. The LLM
will return JSON matching exactly this schema.
}
\examples{
# User profile with required fields
schema_object(
  name = schema_string("Full name"),
  age = schema_integer("Age in years"),
  required = c("name", "age")
)

}
